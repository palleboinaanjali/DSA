#========DEPTH FIRST SEARCH(STACK)========
class Graph:
    def __init__(self):
        self.graph = {}
        
    def insert(self,v,e):
        if v not in self.graph:
            self.graph[v] = [e]
        else:
            self.graph[v].append(e)
    def bfs(self,start):
        queue=[start]
        visited=[]
        while queue:
            cur = queue.pop()
            if cur not in visited:
                visited.append(cur)
                queue.extend(self.graph[cur])
        print(visited)

obj = Graph()
obj.insert("B","T")
obj.insert("T","B")
obj.insert("B","L")
obj.insert("L","B")
obj.insert("D","P")
obj.insert("P","D")
obj.insert("D","T")
obj.insert("T","D")
obj.insert("B","P")
obj.insert("P","B")
obj.insert("D","G")
obj.insert("G","D")
obj.insert("K","D")
obj.insert("D","K")
obj.insert("K","L")
obj.insert("L","K")
print(obj.graph)
obj.bfs("B")
